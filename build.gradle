plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '8.0.0'
}

group = 'org.utopia'
version = '0.0.1'
description = 'Utopia\'s Fitness Tracker'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    implementation 'com.h2database:h2:2.3.232'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'
    testCompileOnly 'org.projectlombok:lombok:1.18.38'
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'
        trimTrailingWhitespace()
        leadingTabsToSpaces()
        endWithNewline()
    }
    java {
        importOrder()
        removeUnusedImports()
        forbidWildcardImports()
        cleanthat()
        palantirJavaFormat('2.74.0').style("AOSP")
        formatAnnotations()
    }
    json {
        target 'src/**/*.json'
        jackson()
            .feature('INDENT_OUTPUT', true)
            .feature('ORDER_MAP_ENTRIES_BY_KEYS', true)
    }
    yaml {
        target 'src/**/*.yaml'
        jackson()
            .feature('INDENT_OUTPUT', true)
            .feature('ORDER_MAP_ENTRIES_BY_KEYS', true)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
